


ARM Macro Assembler    Page 1 


    1 00000000         ;******************** (C) COPYRIGHT HAW-Hamburg ********
                       ************************
    2 00000000         ;* File Name          : main.s
    3 00000000         ;* Author             : Alfred Lohmann
    4 00000000         ;* Version            : V1.0
    5 00000000         ;* Date               : 15.07.2012
    6 00000000         ;* Description        : This is a simple main.
    7 00000000         ;       : The output is send to UART 1. Open Serial Wind
                       ow when 
    8 00000000         ;       : when debugging. Select UART #1 in Serial Windo
                       w selection.
    9 00000000         ;       :
   10 00000000         ;       : Replace this main with yours.
   11 00000000         ;
   12 00000000         ;*******************************************************
                       ************************
   13 00000000         
   14 00000000                 IMPORT           Init_TI_Board ; Initialize the 
                                                            serial line
   15 00000000         ;IMPORT initHW    ; Init Timer
   16 00000000                 IMPORT           puts        ; C output function
                                                            
   17 00000000                 IMPORT           TFT_puts    ; TFT output functi
                                                            on
   18 00000000         
   19 00000000         
   20 00000000         ;********************************************
   21 00000000         ; Data section, aligned on 4-byte boundery
   22 00000000         ;********************************************
   23 00000000                 GLOBAL           MyData
   24 00000000                 GLOBAL           MeinNumFeld
   25 00000000                 GLOBAL           MeinHaWoFeld
   26 00000000                 GLOBAL           MeinTextFeld
   27 00000000                 GLOBAL           MeinByteFeld
   28 00000000                 GLOBAL           MeinBlock
   29 00000000         
   30 00000000                 AREA             MyData, DATA, align = 4
   31 00000000         
   32 00000000 00000033 
              0000007E 
              FFFFFFC7 
              00000042 
              70000000 
              80000000 MeinNumFeld
                               DCD              0x33, 2_01111110, -57, 66, 0x70
000000, 0x80000000
   33 00000018 34 12 78 
              56 BC 9A 
              F0 DE    MeinHaWoFeld
                               DCW              0x1234, 0x5678, 0x9abc, 0xdef0
   34 00000020 41 42 61 
              62 30 31 
              32 33 00 MeinTextFeld
                               DCB              "ABab0123",0
   35 00000029 00 00 00        ALIGN            4
   36 0000002C EF DC BA 
              98       MeinByteFeld
                               DCB              0xef, 0xdc, 0xba, 0x98
   37 00000030         



ARM Macro Assembler    Page 2 


   38 00000030                 ALIGN            4
   39 00000030 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    MeinBlock
                               SPACE            0x20
   40 00000050         
   41 00000050 48 61 6C 
              6C 6F 20 
              54 49 2D 
              4C 61 62 
              6F 72 2E 
              0A 0D 00 text    DCB              "Hallo TI-Labor.\n\r",0
   42 00000062         
   43 00000062         
   44 00000062         
   45 00000062         ;********************************************
   46 00000062         ; Code section, aligned on 8-byte boundery
   47 00000062         ;********************************************
   48 00000062         
   49 00000062                 AREA             |.text|, CODE, READONLY, ALIGN 
= 3
   50 00000000         
   51 00000000         ;--------------------------------------------
   52 00000000         ; main subroutine
   53 00000000         ;--------------------------------------------
   54 00000000                 EXPORT           main [CODE]
   55 00000000         
   56 00000000         main    PROC
   57 00000000         
   58 00000000 F04F 0021       mov              r0,#0x21    ; Anw-01
   59 00000004 F06F 0103       mov              r1,#-4      ; Anw-02
   60 00000008 4A17            ldr              r2,=0xfe543210 ; Anw-03
   61 0000000A 4A15            ldr              r2,[PC, #0x54]
   62 0000000C 4817            ldr              r0, =MeinByteFeld ; Anw-04
   63 0000000E 7801            ldrb             r1, [r0]    ; Anw-05 mit r0-Inh
                                                            alt aus Anw-04
   64 00000010 8802            ldrh             r2, [r0]    ; Anw-06
   65 00000012 6803            ldr              r3, [r0]    ; Anw-07
   66 00000014 4C16            ldr              r4, =MeinHaWoFeld ; Anw-08 Star
                                                            tadresse laden
   67 00000016 6825            ldr              r5, [r4]    ; Anw-09
   68 00000018 6866            ldr              r6, [r4, #4] ; Anw-10
   69 0000001A         
   70 0000001A 4816            ldr              r0, =0x123456ab ; Anw-11
   71 0000001C 4916            ldr              r1, =MeinBlock ; Anw-12
   72 0000001E 6008            str              r0, [r1]    ; Anw-13
   73 00000020 6048            str              r0, [r1, #4] ; Anw-14
   74 00000022 F04F 021A       mov              r2, #0x1a   ; Anw-15
   75 00000026 724A            strb             r2, [r1, #9] ; Anw-16
   76 00000028 728A            strb             r2, [r1, #10] ; Anw-17
   77 0000002A         



ARM Macro Assembler    Page 3 


   78 0000002A 4814            ldr              r0,=MeinNumFeld ; Anw-18
   79 0000002C 6801            ldr              r1, [r0]    ; Anw-19
   80 0000002E 6842            ldr              r2, [r0, #4] ; Anw-20
   81 00000030 188B            adds             r3, r1, r2  ; Anw-21
   82 00000032         
   83 00000032 4813            ldr              r0,=MeinNumFeld+8 ; Anw-22
   84 00000034 6801            ldr              r1, [r0]    ; Anw-23
   85 00000036 6842            ldr              r2, [r0, #4] ; Anw-24
   86 00000038 188B            adds             r3, r1, r2  ; Anw-25
   87 0000003A         
   88 0000003A 4812            ldr              r0,=MeinNumFeld+16 ; Anw-26
   89 0000003C 6801            ldr              r1, [r0]    ; Anw-27
   90 0000003E 6842            ldr              r2, [r0, #4] ; Anw-28
   91 00000040 188B            adds             r3, r1, r2  ; Anw-29
   92 00000042         
   93 00000042 4811            ldr              r0,=MeinTextFeld ; Anw-30
   94 00000044 F810 1F01       ldrb             r1, [r0, #1]! ; Anw-31
   95 00000048 F810 1F01       ldrb             r1, [r0, #1]! ; Anw-32
   96 0000004C         
   97 0000004C 4808            ldr              r0,=MeinHaWoFeld ; Anw-33
   98 0000004E F850 2B04       ldr              r2, [r0], #4 ; Anw-34
   99 00000052 F850 2B04       ldr              r2, [r0], #4 ; Anw-35
  100 00000056         
  101 00000056         
  102 00000056         
  103 00000056 F7FF FFFE       BL               Init_TI_Board ; Initialize the 
                                                            serial line to TTY
  104 0000005A         ; for compatability to out TI-C-Board
  105 0000005A         ;BL initHW   ; Timer init
  106 0000005A         
  107 0000005A 480C            LDR              r0,=text
  108 0000005C F7FF FFFE       BL               puts        ; call C output met
                                                            hod
  109 00000060         
  110 00000060 480A            LDR              r0,=text
  111 00000062 F7FF FFFE       BL               TFT_puts    ; call TFT output m
                                                            ethod
  112 00000066         
  113 00000066 E7FE    forever b                forever     ; nowhere to retun 
                                                            if main ends  
  114 00000068                 ENDP
  115 00000068         
  116 00000068                 ALIGN
  117 00000068         
  118 00000068                 END
              FE543210 
              00000000 
              00000000 
              123456AB 
              00000000 
              00000000 
              00000008 
              00000010 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Keil_v5\ARM\RV31\INC -
IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F4xx --predefine="__
EVAL SETA 1" --predefine="__UVISION_VERSION SETA 523" --list=.\listings\main.ls



ARM Macro Assembler    Page 4 


t main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MeinBlock 00000030

Symbol: MeinBlock
   Definitions
      At line 39 in file main.s
   Uses
      At line 28 in file main.s
      At line 71 in file main.s

MeinByteFeld 0000002C

Symbol: MeinByteFeld
   Definitions
      At line 36 in file main.s
   Uses
      At line 27 in file main.s
      At line 62 in file main.s

MeinHaWoFeld 00000018

Symbol: MeinHaWoFeld
   Definitions
      At line 33 in file main.s
   Uses
      At line 25 in file main.s
      At line 66 in file main.s
      At line 97 in file main.s

MeinNumFeld 00000000

Symbol: MeinNumFeld
   Definitions
      At line 32 in file main.s
   Uses
      At line 24 in file main.s
      At line 78 in file main.s
      At line 83 in file main.s
      At line 88 in file main.s

MeinTextFeld 00000020

Symbol: MeinTextFeld
   Definitions
      At line 34 in file main.s
   Uses
      At line 26 in file main.s
      At line 93 in file main.s

MyData 00000000

Symbol: MyData
   Definitions
      At line 30 in file main.s
   Uses
      At line 23 in file main.s
Comment: MyData used once
text 00000050

Symbol: text



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 41 in file main.s
   Uses
      At line 107 in file main.s
      At line 110 in file main.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 49 in file main.s
   Uses
      None
Comment: .text unused
forever 00000066

Symbol: forever
   Definitions
      At line 113 in file main.s
   Uses
      At line 113 in file main.s
Comment: forever used once
main 00000000

Symbol: main
   Definitions
      At line 56 in file main.s
   Uses
      At line 54 in file main.s
Comment: main used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Init_TI_Board 00000000

Symbol: Init_TI_Board
   Definitions
      At line 14 in file main.s
   Uses
      At line 103 in file main.s
Comment: Init_TI_Board used once
TFT_puts 00000000

Symbol: TFT_puts
   Definitions
      At line 17 in file main.s
   Uses
      At line 111 in file main.s
Comment: TFT_puts used once
puts 00000000

Symbol: puts
   Definitions
      At line 16 in file main.s
   Uses
      At line 108 in file main.s
Comment: puts used once
3 symbols
348 symbols in table
